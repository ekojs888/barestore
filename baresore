#!/bin/bash
# backup_restore.sh
# Script untuk backup & restore dengan config dinamis

CONFIG="./barestore.conf"
BACKUP_DIR="./backup"
BACKUP_FILE="$BACKUP_DIR/backup_$(date +%Y%m%d_%H%M%S).tar.gz"
TMP_RESTORE="/tmp/restore_tmp"

mkdir -p "$BACKUP_DIR"

backup() {
    echo "=== Mulai Backup ==="
    declare -a paths_to_backup=()

    while read -r path do_backup do_restore; do
        [[ "$path" =~ ^#.*$ || -z "$path" ]] && continue
        if [[ "$do_backup" == "yes" ]]; then
            matches=$(ls -d $path 2>/dev/null)
            if [[ $? -ne 0 || -z "$matches" ]]; then
                echo "❌ Path $path tidak ditemukan."
                read -p "Mau lanjut backup (y/n)? " ans
                [[ "$ans" != "y" ]] && exit 1
                continue
            fi
            for m in $matches; do
                paths_to_backup+=("$m")
            done
        fi
    done < "$CONFIG"

    if [[ ${#paths_to_backup[@]} -eq 0 ]]; then
        echo "Tidak ada file untuk dibackup."
        exit 1
    fi

    tar -czf "$BACKUP_FILE" "${paths_to_backup[@]}"
    if [[ $? -eq 0 ]]; then
        echo "✅ Backup selesai: $BACKUP_FILE"
    else
        echo "❌ Gagal membuat arsip backup."
        exit 1
    fi
}

restore() {
    BACKUP_TO_RESTORE="$1"
    if [[ ! -f "$BACKUP_TO_RESTORE" ]]; then
        echo "❌ File backup tidak ditemukan."
        exit 1
    fi

    mkdir -p "$TMP_RESTORE"
    tar -xzf "$BACKUP_TO_RESTORE" -C "$TMP_RESTORE"
    echo "=== Mulai Restore ==="

    while read -r path do_backup do_restore; do
        [[ "$path" =~ ^#.*$ || -z "$path" ]] && continue
        if [[ "$do_restore" == "yes" ]]; then
            matches=$(ls -d $TMP_RESTORE$path 2>/dev/null)
            if [[ $? -ne 0 || -z "$matches" ]]; then
                echo "❌ File $path gagal direstore."
                read -p "Skip file ini (s) atau rollback semua (r)? " choice
                if [[ "$choice" == "r" ]]; then
                    echo "Rollback semua restore..."
                    rm -rf "$TMP_RESTORE"
                    exit 1
                else
                    echo "Skip $path"
                    continue
                fi
            fi
            echo "Restore $path → $path"
            cp -r "$TMP_RESTORE$path" "$path"
        fi
    done < "$CONFIG"

    rm -rf "$TMP_RESTORE"
    echo "✅ Restore selesai."
}

README_FILE="./README"
show_help() {
    if [[ -f "$README_FILE" ]]; then
        cat "$README_FILE"
    else
        echo "README tidak ditemukan: $README_FILE"
        echo "Silakan buat README untuk dokumentasi."
    fi
}


case "$1" in
    backup)
        backup
        ;;
    restore)
        if [[ -z "$2" ]]; then
            echo "Gunakan: $0 restore <file_backup.tar.gz>"
            exit 1
        fi
        restore "$2"
        ;;
	--help|-h)
        show_help
        ;;
    *)
        echo "Gunakan: $0 {backup|restore <file>}"
        exit 1
        ;;
esac

